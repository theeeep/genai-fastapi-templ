services:
  api:
    tty: true 
    restart: always
    image: gen-ai-template-be
    container_name: gen-ai-template-be 
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PORT=8000
        - WORKERS=4
    ports:
      - "${PORT:-8000}:8000"
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/.venv
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/.ruff_cache
    environment:
      - PORT=8000
      - WORKERS=1
    networks:
      - application  
    command: ["/app/.venv/bin/uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    container_name: gen-ai-template-db
    environment:
      - POSTGRES_DB=${DB_NAME:-genai_template}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    networks:
      - application
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  application:
    driver: bridge

volumes:
  postgres_data: